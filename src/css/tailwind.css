/**
 * This injects Tailwind's base styles, which is a combination of
 * Normalize.css and some additional base styles.
 *
 * You can see the styles here:
 * https://github.com/tailwindcss/tailwindcss/blob/master/css/preflight.css
 *
 * If using `postcss-import`, use this import instead:
 *
 * @import "tailwindcss/preflight";
 */
@tailwind preflight;

/**
  * This injects any component classes registered by plugins.
  *
  * If using `postcss-import`, use this import instead:
  *
  * @import "tailwindcss/components";
  */
@tailwind components;

/**
* Here you would add any of your custom component classes; stuff that you'd
* want loaded *before* the utilities so that the utilities could still
* override them.
*
* Example:
*
* .btn { ... }
* .form-input { ... }
*
* Or if using a preprocessor or `postcss-import`:
*
* @import "components/buttons";
* @import "components/forms";
*/

/**
  * This injects all of Tailwind's utility classes, generated based on your
  * config file.
  *
  * If using `postcss-import`, use this import instead:
  *
  * @import "tailwindcss/utilities";
  */
@tailwind utilities;

/**
  * Here you would add any custom utilities you need that don't come out of the
  * box with Tailwind.
  *
  * Example :
  *
  * .bg-pattern-graph-paper { ... }
  * .skew-45 { ... }
  *
  * Or if using a preprocessor or `postcss-import`:
  *
  * @import "utilities/background-patterns";
  * @import "utilities/skew-transforms";
  */

:root {
  --header-height: 60px;
}

html {
  scroll-behavior: smooth;
}

body {
  @apply bg-blue-6;
  @apply font-sans;
  @apply leading-normal;
  @apply text-lg;
}

h1,
h2,
h3 {
  @apply font-display;
  @apply leading-tight;
}

h1 + p,
h2 + p,
h3 + p,
h1 + ul,
h2 + ul,
h3 + ul {
  @apply mt-4;
}

p + p {
  @apply mt-4;
}

a {
  @apply font-bold;
  @apply no-underline;
  @apply text-blue-6;
}

.header {
  height: var(--header-height);
}

.bounce {
  animation: bounce 2s;
  animation-iteration-count: infinite;
}

@keyframes bounce {
  0%,
  25%,
  50%,
  75%,
  100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-20px);
  }
  60% {
    transform: translateY(-12px);
  }
}

.overline {
  transform: perspective(1px) translateZ(0);
  box-shadow: 0 0 1px rgba(0, 0, 0, 0);
  @apply overflow-hidden;
  @apply relative;
}
.overline::after {
  content: '';
  height: 4px;
  right: 100%;
  transition-duration: 0.3s;
  transition-property: right;
  transition-timing-function: ease-out;
  z-index: -1;
  @apply absolute;
  @apply bg-blue-6;
  @apply pin-l;
  @apply pin-t;
}
.overline:active::after,
.overline:focus::after,
.overline:hover::after {
  @apply pin-r;
}

.hero {
  min-height: calc(100vh - var(--header-height));
}

.gradient {
  background: linear-gradient(125deg, #0967d2, #00337d);
}

.btn:hover {
  bottom: 2px;
  @apply shadow-lg;
}

.skew {
  clip-path: polygon(0 0, 100% 0, 100% 100%, 0 calc(100% - 3vw));
}

.cards {
  --margin: 1rem;
  --modifier: calc(55rem - 100%);
  @apply flex;
  @apply flex-wrap;
}

.cards > * {
  flex-basis: calc(var(--modifier) * 999);
  margin: var(--margin);
  @apply flex-grow;
  @apply flex;
  @apply items-center;
  @apply justify-center;
}
